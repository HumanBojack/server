services:
    redis:
        image: redis
        container_name: redis-outline
        volumes:
            - ./redis.conf:/redis.conf
        command: ["redis-server", "/redis.conf"]
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            interval: 10s
            timeout: 30s
            retries: 3
        networks:
            - default

    postgres:
        image: postgres:13
        container_name: postgres-outline
        environment:
            POSTGRES_USER: outline
            POSTGRES_PASSWORD: outline
            POSTGRES_DB: outline
        volumes:
            - ./postgres:/var/lib/postgresql/data
        healthcheck:
            test: ["CMD", "pg_isready", "-d", "outline", "-U", "outline"]
            interval: 10s
            timeout: 30s
            retries: 3
        networks:
            - default

    outline:
        image: docker.getoutline.com/outlinewiki/outline:latest
        container_name: outline
        env_file:
            - .env
        volumes:
            - ./outline:/data
        restart: unless-stopped
        depends_on:
            - redis
            - postgres
        networks:
            - traefik
            - default
        labels:
            - "traefik.enable=true"
            - "traefik.docker.network=traefik"
            - "traefik.http.routers.outline.rule=Host(`outline.home.spyr.dev`)"
            - "traefik.http.routers.outline.entrypoints=websecure"
            - "traefik.http.routers.outline.tls=true"
            - "traefik.http.routers.outline.tls.certresolver=porkbun"
            - "traefik.http.services.outline.loadbalancer.server.port=3000"
            - "traefik.http.routers.outline.middlewares=authentik@docker"

networks:
    traefik:
        external: true
